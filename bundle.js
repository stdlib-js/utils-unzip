// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
!function(r,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(r="undefined"!=typeof globalThis?globalThis:r||self).unzip=e()}(this,(function(){"use strict";var r="function"==typeof Object.defineProperty?Object.defineProperty:null;var e=function(){try{return r({},"x",{}),!0}catch(r){return!1}},t=Object.defineProperty,n=Object.prototype,o=n.toString,i=n.__defineGetter__,a=n.__defineSetter__,u=n.__lookupGetter__,l=n.__lookupSetter__;var c=t,f=function(r,e,t){var c,f,y,p;if("object"!=typeof r||null===r||"[object Array]"===o.call(r))throw new TypeError("invalid argument. First argument must be an object. Value: `"+r+"`.");if("object"!=typeof t||null===t||"[object Array]"===o.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((f="value"in t)&&(u.call(r,e)||l.call(r,e)?(c=r.__proto__,r.__proto__=n,delete r[e],r[e]=t.value,r.__proto__=c):r[e]=t.value),y="get"in t,p="set"in t,f&&(y||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return y&&i&&i.call(r,e,t.get),p&&a&&a.call(r,e,t.set),r},y=e()?c:f;var p=function(r,e,t){y(r,e,{configurable:!1,enumerable:!1,writable:!1,value:t})};var v=function(r){return"number"==typeof r};var s=function(){return"function"==typeof Symbol&&"symbol"==typeof Symbol("foo")}();var b=function(){return s&&"symbol"==typeof Symbol.toStringTag},d=Object.prototype.toString,m=d;var _=function(r){return m.call(r)},g=Object.prototype.hasOwnProperty;var h=function(r,e){return null!=r&&g.call(r,e)},w="function"==typeof Symbol?Symbol.toStringTag:"",j=h,T=w,A=d;var S=_,O=function(r){var e,t,n;if(null==r)return A.call(r);t=r[T],e=j(r,T);try{r[T]=void 0}catch(e){return A.call(r)}return n=A.call(r),e?r[T]=t:delete r[T],n},E=b()?O:S,I=Number,P=I.prototype.toString;var N=E,x=I,V=function(r){try{return P.call(r),!0}catch(r){return!1}},F=b();var G=function(r){return"object"==typeof r&&(r instanceof x||(F?V(r):"[object Number]"===N(r)))},M=v,k=G;var z=p,Y=function(r){return M(r)||k(r)},C=G;z(Y,"isPrimitive",v),z(Y,"isObject",C);var q=Y,B=Number.POSITIVE_INFINITY,D=I.NEGATIVE_INFINITY,H=Math.floor;var J=B,K=D,L=function(r){return H(r)===r};var Q=function(r){return r<J&&r>K&&L(r)},R=q.isPrimitive,U=Q;var W=function(r){return R(r)&&U(r)},X=q.isObject,Z=Q;var $=function(r){return X(r)&&Z(r.valueOf())},rr=W,er=$;var tr=p,nr=function(r){return rr(r)||er(r)},or=$;tr(nr,"isPrimitive",W),tr(nr,"isObject",or);var ir,ar=nr,ur=E;ir=Array.isArray?Array.isArray:function(r){return"[object Array]"===ur(r)};var lr=ar,cr=ir;var fr=function(r,e){var t,n,o,i,a,u,l;if(!cr(r))throw new TypeError("invalid argument. Must provide a zipped array.");for(n=r.length,a=0;a<n;a++)if(!cr(r[a]))throw new TypeError("invalid argument. Array must only contain arrays.");if(t=r[0].length,arguments.length>1){if(!cr(e))throw new TypeError("invalid argument. Indices must be specified as an array.");for(a=0;a<e.length;a++){if(l=e[a],!lr(l))throw new TypeError("invalid argument. All indices must be integers.");if(l<0||l>t)throw new Error("invalid argument. Must provide valid indices; i.e., an index must be on the interval [0,len], where len is the tuple length.")}t=e.length}else for(e=new Array(t),a=0;a<t;a++)e[a]=a;for(o=new Array(t),u=0;u<t;u++){for(i=new Array(n),l=e[u],a=0;a<n;a++)i[a]=r[a][l];o[u]=i}return o};return fr}));
//# sourceMappingURL=bundle.js.map
