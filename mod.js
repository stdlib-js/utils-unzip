// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
function r(){var r,e=arguments,t=e[0],n="https://stdlib.io/e/"+t+"?";for(r=1;r<e.length;r++)n+="&arg[]="+encodeURIComponent(e[r]);return n}var e="function"==typeof Object.defineProperty?Object.defineProperty:null;var t=Object.defineProperty,n=Object.prototype,o=n.toString,i=n.__defineGetter__,a=n.__defineSetter__,l=n.__lookupGetter__,u=n.__lookupSetter__;var c=function(){try{return e({},"x",{}),!0}catch(r){return!1}}()?t:function(r,e,t){var c,f,y,p;if("object"!=typeof r||null===r||"[object Array]"===o.call(r))throw new TypeError("invalid argument. First argument must be an object. Value: `"+r+"`.");if("object"!=typeof t||null===t||"[object Array]"===o.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((f="value"in t)&&(l.call(r,e)||u.call(r,e)?(c=r.__proto__,r.__proto__=n,delete r[e],r[e]=t.value,r.__proto__=c):r[e]=t.value),y="get"in t,p="set"in t,f&&(y||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return y&&i&&i.call(r,e,t.get),p&&a&&a.call(r,e,t.set),r};function f(r,e,t){c(r,e,{configurable:!1,enumerable:!1,writable:!1,value:t})}function y(r){return"number"==typeof r}var p="function"==typeof Symbol&&"symbol"==typeof Symbol("foo");function b(){return p&&"symbol"==typeof Symbol.toStringTag}var v=Object.prototype.toString;var s=Object.prototype.hasOwnProperty;var _="function"==typeof Symbol?Symbol.toStringTag:"";var g=b()?function(r){var e,t,n,o,i;if(null==r)return v.call(r);t=r[_],i=_,e=null!=(o=r)&&s.call(o,i);try{r[_]=void 0}catch(e){return v.call(r)}return n=v.call(r),e?r[_]=t:delete r[_],n}:function(r){return v.call(r)},h=Number,m=h.prototype.toString;var w=b();function d(r){return"object"==typeof r&&(r instanceof h||(w?function(r){try{return m.call(r),!0}catch(r){return!1}}(r):"[object Number]"===g(r)))}function j(r){return y(r)||d(r)}f(j,"isPrimitive",y),f(j,"isObject",d);var S=Number.POSITIVE_INFINITY,T=h.NEGATIVE_INFINITY,A=Math.floor;function E(r){return r<S&&r>T&&A(e=r)===e;var e}function O(r){return y(r)&&E(r)}function I(r){return d(r)&&E(r.valueOf())}function N(r){return O(r)||I(r)}f(N,"isPrimitive",O),f(N,"isObject",I);var P=Array.isArray?Array.isArray:function(r){return"[object Array]"===g(r)};function z(e,t){var n,o,i,a,l,u,c;if(!P(e))throw new TypeError(r("0lz23"));for(o=e.length,l=0;l<o;l++)if(!P(e[l]))throw new TypeError(r("0lz24"));if(n=e[0].length,arguments.length>1){if(!P(t))throw new TypeError(r("0lz25"));for(l=0;l<t.length;l++){if(!N(c=t[l]))throw new TypeError(r("0lz26"));if(c<0||c>n)throw new Error("invalid argument. Must provide valid indices (i.e., must be a nonnegative integer less than or equal to the tuple length).")}n=t.length}else for(t=new Array(n),l=0;l<n;l++)t[l]=l;for(i=new Array(n),u=0;u<n;u++){for(a=new Array(o),c=t[u],l=0;l<o;l++)a[l]=e[l][c];i[u]=a}return i}export{z as default};
//# sourceMappingURL=mod.js.map
