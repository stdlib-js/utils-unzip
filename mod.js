/// <reference types="./mod.d.ts" />
var r="function"==typeof Object.defineProperty?Object.defineProperty:null;var e=function(){try{return r({},"x",{}),!0}catch(r){return!1}},t=Object.defineProperty,n=Object.prototype,o=n.toString,a=n.__defineGetter__,i=n.__defineSetter__,u=n.__lookupGetter__,l=n.__lookupSetter__;var c=function(r,e,t){var c,f,y,v;if("object"!=typeof r||null===r||"[object Array]"===o.call(r))throw new TypeError("invalid argument. First argument must be an object. Value: `"+r+"`.");if("object"!=typeof t||null===t||"[object Array]"===o.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((f="value"in t)&&(u.call(r,e)||l.call(r,e)?(c=r.__proto__,r.__proto__=n,delete r[e],r[e]=t.value,r.__proto__=c):r[e]=t.value),y="get"in t,v="set"in t,f&&(y||v))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return y&&a&&a.call(r,e,t.get),v&&i&&i.call(r,e,t.set),r},f=e()?t:c;var y=function(r,e,t){f(r,e,{configurable:!1,enumerable:!1,writable:!1,value:t})};var v=function(){return"function"==typeof Symbol&&"symbol"==typeof Symbol("foo")}();var p=function(){return v&&"symbol"==typeof Symbol.toStringTag},b=Object.prototype.hasOwnProperty;var s=function(r,e){return null!=r&&b.call(r,e)},m=Object.prototype.toString;var _=function(r){return m.call(r)},d="function"==typeof Symbol?Symbol.toStringTag:"";var g=function(r){var e,t,n;if(null==r)return m.call(r);t=r[d],e=s(r,d);try{r[d]=void 0}catch(e){return m.call(r)}return n=m.call(r),e?r[d]=t:delete r[d],n},h=p()?g:_,w=Number;var j=function(r){return"number"==typeof r},A=w.prototype.toString;var S=function(r){try{return A.call(r),!0}catch(r){return!1}},O=p();var T=function(r){return"object"==typeof r&&(r instanceof w||(O?S(r):"[object Number]"===h(r)))};var E=function(r){return j(r)||T(r)};y(E,"isPrimitive",j),y(E,"isObject",T);var I=E,P=Number.POSITIVE_INFINITY,N=w.NEGATIVE_INFINITY,V=Math.floor;var x=function(r){return V(r)===r};var F=function(r){return r<P&&r>N&&x(r)},G=I.isPrimitive;var M=function(r){return G(r)&&F(r)},k=I.isObject;var Y=function(r){return k(r)&&F(r.valueOf())};var z=function(r){return M(r)||Y(r)};y(z,"isPrimitive",M),y(z,"isObject",Y);var C=z;var q=Array.isArray?Array.isArray:function(r){return"[object Array]"===h(r)};var B=function(r,e){var t,n,o,a,i,u,l;if(!q(r))throw new TypeError("invalid argument. Must provide a zipped array.");for(n=r.length,i=0;i<n;i++)if(!q(r[i]))throw new TypeError("invalid argument. Array must only contain arrays.");if(t=r[0].length,arguments.length>1){if(!q(e))throw new TypeError("invalid argument. Indices must be specified as an array.");for(i=0;i<e.length;i++){if(l=e[i],!C(l))throw new TypeError("invalid argument. All indices must be integers.");if(l<0||l>t)throw new Error("invalid argument. Must provide valid indices; i.e., an index must be on the interval [0,len], where len is the tuple length.")}t=e.length}else for(e=new Array(t),i=0;i<t;i++)e[i]=i;for(o=new Array(t),u=0;u<t;u++){for(a=new Array(n),l=e[u],i=0;i<n;i++)a[i]=r[i][l];o[u]=a}return o};export{B as default};
