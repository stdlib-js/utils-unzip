// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
var e,r;e=this,r=function(){"use strict";function e(){var e,r=arguments,t=r[0],n="https://stdlib.io/e/"+t+"?";for(e=1;e<r.length;e++)n+="&arg[]="+encodeURIComponent(r[e]);return n}var r="function"==typeof Object.defineProperty?Object.defineProperty:null,t=Object.defineProperty,n=Object.prototype,o=n.toString,i=n.__defineGetter__,l=n.__defineSetter__,u=n.__lookupGetter__,a=n.__lookupSetter__,c=function(){try{return r({},"x",{}),!0}catch(e){return!1}}()?t:function(e,r,t){var c,f,y,p;if("object"!=typeof e||null===e||"[object Array]"===o.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof t||null===t||"[object Array]"===o.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((f="value"in t)&&(u.call(e,r)||a.call(e,r)?(c=e.__proto__,e.__proto__=n,delete e[r],e[r]=t.value,e.__proto__=c):e[r]=t.value),y="get"in t,p="set"in t,f&&(y||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return y&&i&&i.call(e,r,t.get),p&&l&&l.call(e,r,t.set),e};function f(e,r,t){c(e,r,{configurable:!1,enumerable:!1,writable:!1,value:t})}function y(e){return"number"==typeof e}var p="function"==typeof Symbol&&"symbol"==typeof Symbol("foo");function b(){return p&&"symbol"==typeof Symbol.toStringTag}var s=Object.prototype.toString,d=Object.prototype.hasOwnProperty,_="function"==typeof Symbol?Symbol.toStringTag:"",g=b()?function(e){var r,t,n,o,i;if(null==e)return s.call(e);t=e[_],i=_,r=null!=(o=e)&&d.call(o,i);try{e[_]=void 0}catch(r){return s.call(e)}return n=s.call(e),r?e[_]=t:delete e[_],n}:function(e){return s.call(e)},h=Number,m=h.prototype.toString,v=b();function w(e){return"object"==typeof e&&(e instanceof h||(v?function(e){try{return m.call(e),!0}catch(e){return!1}}(e):"[object Number]"===g(e)))}function j(e){return y(e)||w(e)}f(j,"isPrimitive",y),f(j,"isObject",w);var T=Number.POSITIVE_INFINITY,S=h.NEGATIVE_INFINITY,A=Math.floor;function E(e){return e<T&&e>S&&A(r=e)===r;var r}function O(e){return y(e)&&E(e)}function I(e){return w(e)&&E(e.valueOf())}function N(e){return O(e)||I(e)}f(N,"isPrimitive",O),f(N,"isObject",I);var P=Array.isArray?Array.isArray:function(e){return"[object Array]"===g(e)};return function(r,t){var n,o,i,l,u,a,c;if(!P(r))throw new TypeError(e("0lz23"));for(o=r.length,u=0;u<o;u++)if(!P(r[u]))throw new TypeError(e("0lz24"));if(n=r[0].length,arguments.length>1){if(!P(t))throw new TypeError(e("0lz25"));for(u=0;u<t.length;u++){if(!N(c=t[u]))throw new TypeError(e("0lz26"));if(c<0||c>n)throw new Error("invalid argument. Must provide valid indices (i.e., must be a nonnegative integer less than or equal to the tuple length).")}n=t.length}else for(t=new Array(n),u=0;u<n;u++)t[u]=u;for(i=new Array(n),a=0;a<n;a++){for(l=new Array(o),c=t[a],u=0;u<o;u++)l[u]=r[u][c];i[a]=l}return i}},"object"==typeof exports&&"undefined"!=typeof module?module.exports=r():"function"==typeof define&&define.amd?define(r):(e="undefined"!=typeof globalThis?globalThis:e||self).unzip=r();
//# sourceMappingURL=browser.js.map
